Debug information for file: javali_tests/HW4/OkDifferentReads.javali
AST Resulting From Parsing Stage:
ClassDecl (name: Main, superClass: Object)
| VarDecl (name: x, type: int)
| MethodDecl (argumentNames: [], argumentTypes: [], name: main, returnType: void)
| | Seq ()
| | | VarDecl (name: y, type: int)
| | | VarDecl (name: arr, type: int[])
| | Seq ()
| | | BuiltInWrite ()
| | | | IntConst (value: 1)
| | | BuiltInWriteln ()
| | | Assign ()
| | | | Var (name: y)
| | | | BuiltInRead ()
| | | BuiltInWrite ()
| | | | BinaryOp (operator: B_PLUS)
| | | | | Var (name: y)
| | | | | IntConst (value: 1)
| | | BuiltInWriteln ()
| | | Assign ()
| | | | Var (name: x)
| | | | BuiltInRead ()
| | | BuiltInWrite ()
| | | | BinaryOp (operator: B_PLUS)
| | | | | Var (name: x)
| | | | | IntConst (value: 1)
| | | BuiltInWriteln ()
| | | Assign ()
| | | | Var (name: arr)
| | | | NewArray (typeName: int[])
| | | | | IntConst (value: 64)
| | | Assign ()
| | | | Index ()
| | | | | Var (name: arr)
| | | | | Var (name: x)
| | | | BuiltInRead ()
| | | BuiltInWrite ()
| | | | BinaryOp (operator: B_PLUS)
| | | | | Index ()
| | | | | | Var (name: arr)
| | | | | | Var (name: x)
| | | | | IntConst (value: 1)
| | | BuiltInWriteln ()

Phase cfg failed because we expected to see:
digraph G {
  graph [ rankdir = "LR" ];
  subgraph cluster_0 {
    label = "Main.main"
    M0_BB0 [
      shape="record"
      label="BB0|write(1)|writeln()|y = read()|write((y + 1))|writeln()|this.x = read()|write((this.x + 1))|writeln()|arr = new int[][64]|arr[this.x] = read()|write((arr[this.x] + 1))|writeln()"
    ];
    M0_BB0 -> M0_BB1;
    M0_BB1 [
      shape="record"
      label="BB1"
    ];
  }
}

But we actually saw:
digraph G {
  graph [ rankdir = "LR" ];
  subgraph cluster_0 {
    label = "Main.main"
    M0_BB0 [
      shape="record"
      label="BB0"
    ];
    M0_BB1 [
      shape="record"
      label="BB1"
    ];
  }
}

The difference is:
At line   7 /   7:
<       label="BB0|write(1)|writeln()|y = read()|write((y + 1))|writeln()|this.x = read()|write((this.x + 1))|writeln()|arr = new int[][64]|arr[this.x] = read()|write((arr[this.x] + 1))|writeln()"
>       label="BB0"
At line   9 /   9:
<     M0_BB0 -> M0_BB1;
Line  16 /  15:

