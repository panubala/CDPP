Debug information for file: javali_tests/HW2/OkSimpleReturnWithExpression.javali
AST Resulting From Parsing Stage:
ClassDecl (name: Main, superClass: Object)
| MethodDecl (argumentNames: [a, b], argumentTypes: [int, int], name: m, returnType: int)
| | Seq ()
| | Seq ()
| | | ReturnStmt ()
| | | | BinaryOp (operator: B_PLUS)
| | | | | BinaryOp (operator: B_PLUS)
| | | | | | Var (name: a)
| | | | | | Var (name: b)
| | | | | IntConst (value: 1)
| MethodDecl (argumentNames: [], argumentTypes: [], name: main, returnType: void)
| | Seq ()
| | | VarDecl (name: res, type: int)
| | Seq ()
| | | Assign ()
| | | | Var (name: res)
| | | | UnaryOp (operator: U_MINUS)
| | | | | IntConst (value: 1)
| | | Assign ()
| | | | Var (name: res)
| | | | MethodCallExpr (methodName: m)
| | | | | ThisRef ()
| | | | | IntConst (value: 1)
| | | | | IntConst (value: 2)
| | | BuiltInWrite ()
| | | | Var (name: res)
| | | BuiltInWriteln ()
| | | Assign ()
| | | | Var (name: res)
| | | | MethodCallExpr (methodName: m)
| | | | | ThisRef ()
| | | | | IntConst (value: 1)
| | | | | IntConst (value: 2)
| | | BuiltInWrite ()
| | | | Var (name: res)
| | | BuiltInWriteln ()
| | | BuiltInWrite ()
| | | | MethodCallExpr (methodName: m)
| | | | | ThisRef ()
| | | | | IntConst (value: 1)
| | | | | IntConst (value: 2)
| | | BuiltInWriteln ()
| | | BuiltInWrite ()
| | | | MethodCallExpr (methodName: m)
| | | | | ThisRef ()
| | | | | IntConst (value: 1)
| | | | | IntConst (value: 2)
| | | BuiltInWriteln ()

Phase cfg failed because we expected to see:
digraph G {
  graph [ rankdir = "LR" ];
  subgraph cluster_0 {
    label = "Main.m"
    M0_BB0 [
      shape="record"
      label="BB0|return ((a + b) + 1)"
    ];
    M0_BB0 -> M0_BB1;
    M0_BB1 [
      shape="record"
      label="BB1"
    ];
  }
  subgraph cluster_1 {
    label = "Main.main"
    M1_BB0 [
      shape="record"
      label="BB0|res = -(1)|res = this.m(...)|write(res)|writeln()|res = this.m(...)|write(res)|writeln()|write(this.m(...))|writeln()|write(this.m(...))|writeln()"
    ];
    M1_BB0 -> M1_BB1;
    M1_BB1 [
      shape="record"
      label="BB1"
    ];
  }
}

But we actually saw:
digraph G {
  graph [ rankdir = "LR" ];
  subgraph cluster_0 {
    label = "Main.m"
    M0_BB0 [
      shape="record"
      label="BB0"
    ];
    M0_BB1 [
      shape="record"
      label="BB1"
    ];
  }
  subgraph cluster_1 {
    label = "Main.main"
    M1_BB0 [
      shape="record"
      label="BB0"
    ];
    M1_BB1 [
      shape="record"
      label="BB1"
    ];
  }
}

The difference is:
At line   7 /   7:
<       label="BB0|return ((a + b) + 1)"
>       label="BB0"
At line   9 /   9:
<     M0_BB0 -> M0_BB1;
At line  19 /  18:
<       label="BB0|res = -(1)|res = this.m(...)|write(res)|writeln()|res = this.m(...)|write(res)|writeln()|write(this.m(...))|writeln()|write(this.m(...))|writeln()"
>       label="BB0"
At line  21 /  20:
<     M1_BB0 -> M1_BB1;
Line  28 /  26:

