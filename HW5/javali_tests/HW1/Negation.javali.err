Debug information for file: javali_tests/HW1/Negation.javali
AST Resulting From Parsing Stage:
ClassDecl (name: Main, superClass: Object)
| MethodDecl (argumentNames: [], argumentTypes: [], name: main, returnType: void)
| | Seq ()
| | | VarDecl (name: A, type: int)
| | | VarDecl (name: B, type: int)
| | | VarDecl (name: a, type: int)
| | | VarDecl (name: b, type: int)
| | | VarDecl (name: c, type: int)
| | | VarDecl (name: d, type: int)
| | Seq ()
| | | Assign ()
| | | | Var (name: A)
| | | | IntConst (value: 1)
| | | Assign ()
| | | | Var (name: B)
| | | | IntConst (value: 1)
| | | Assign ()
| | | | Var (name: a)
| | | | BinaryOp (operator: B_TIMES)
| | | | | Var (name: A)
| | | | | UnaryOp (operator: U_MINUS)
| | | | | | Var (name: B)
| | | Assign ()
| | | | Var (name: b)
| | | | BinaryOp (operator: B_TIMES)
| | | | | UnaryOp (operator: U_MINUS)
| | | | | | Var (name: A)
| | | | | Var (name: B)
| | | Assign ()
| | | | Var (name: c)
| | | | UnaryOp (operator: U_MINUS)
| | | | | BinaryOp (operator: B_PLUS)
| | | | | | Var (name: A)
| | | | | | Var (name: B)
| | | Assign ()
| | | | Var (name: d)
| | | | UnaryOp (operator: U_MINUS)
| | | | | BinaryOp (operator: B_TIMES)
| | | | | | Var (name: A)
| | | | | | Var (name: B)
| | | BuiltInWrite ()
| | | | Var (name: a)
| | | BuiltInWriteln ()
| | | BuiltInWrite ()
| | | | Var (name: b)
| | | BuiltInWriteln ()
| | | BuiltInWrite ()
| | | | Var (name: c)
| | | BuiltInWriteln ()
| | | BuiltInWrite ()
| | | | Var (name: d)
| | | BuiltInWriteln ()

Phase cfg failed because we expected to see:
digraph G {
  graph [ rankdir = "LR" ];
  subgraph cluster_0 {
    label = "Main.main"
    M0_BB0 [
      shape="record"
      label="BB0|A = 1|B = 1|a = (A * -(B))|b = (-(A) * B)|c = -((A + B))|d = -((A * B))|write(a)|writeln()|write(b)|writeln()|write(c)|writeln()|write(d)|writeln()"
    ];
    M0_BB0 -> M0_BB1;
    M0_BB1 [
      shape="record"
      label="BB1"
    ];
  }
}

But we actually saw:
digraph G {
  graph [ rankdir = "LR" ];
  subgraph cluster_0 {
    label = "Main.main"
    M0_BB0 [
      shape="record"
      label="BB0"
    ];
    M0_BB1 [
      shape="record"
      label="BB1"
    ];
  }
}

The difference is:
At line   7 /   7:
<       label="BB0|A = 1|B = 1|a = (A * -(B))|b = (-(A) * B)|c = -((A + B))|d = -((A * B))|write(a)|writeln()|write(b)|writeln()|write(c)|writeln()|write(d)|writeln()"
>       label="BB0"
At line   9 /   9:
<     M0_BB0 -> M0_BB1;
Line  16 /  15:

